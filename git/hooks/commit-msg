#!/usr/bin/env python3

import re
import sys


def proc(f):
    subject = f.readline().rstrip()
    subject_pattern = r'^\[(?P<category>[a-z]{3,10})\] (?P<summary>.{20,50})'
    r = re.fullmatch(subject_pattern, subject)
    if not r:
        raise ValueError(f'subject ({subject}) does match pattern: [{subject_pattern}]')
    category, summary = r.groups()
    expected_categories = {'wip', 'exp', 'feature', 'issue', 'bugfix', 'refactor', 'merge'}
    if category not in expected_categories:
        raise ValueError(f'unrecognised category: [{category}], one of {expected_categories} is expected')
    if not 20 <= len(summary) <= 50:
        raise ValueError(f'the length of summary is expected to be in the range [20, 50], {len(summary)} got')
    if subject.endswith('.'):
        raise ValueError('do not end the subject line with any period')
    for line in f:
        if line.startswith('#'):
            continue
        line = line.rstrip()
        if line:
            raise ValueError(f'a blank line is expected to separate the subject from body, but found line: [{line}]')
        else:
            break
    line_count = 2
    max_line_length = 72
    max_line_count = 30
    for line in f:
        if line.startswith('#'):
            continue
        line_count += 1
        if line_count > max_line_count:
            raise ValueError(f'body line count exceeds {max_line_count}, use a wiki instead')
        if len(line) > max_line_length:
            raise ValueError(f'body should wrapped at {max_line_length} characters, {len(line)} got')


if __name__ == '__main__':
    commit_msg_fpath = sys.argv[1]
    try:
        with open(commit_msg_fpath) as f:
            proc(f)
    except Exception as e:
        print(f'[ERROR] commit-msg: {e}', file=sys.stderr)
        sys.exit(1)
