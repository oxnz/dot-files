#!/usr/bin/env python3

import os
import sys
import subprocess
from common import msgdump


def clean_pyc():
    msgdump('info', 'deleting all ".pyc" files in working directory ...')
    for root, dirs, files in os.walk('.'):
        for filename in files:
            ext = os.path.splitext(filename)[1]
            if ext == '.pyc':
                os.unlink(os.path.join(root, filename))


def proc(previous_head, new_head, is_branch_checkout):
    if not is_branch_checkout:  # this is a file checkout. Nothing to do
        return
    cmdlets = {
            'base': 'git merge-base @ @{u}',
            'local': 'git rev-parse @',
            'remote': 'git rev-parse @{u}',
    }
    info = {key: subprocess.check_output(cmd.split(' ')).decode('utf-8') for key, cmd in cmdlets.items()}
    msgdump('info', f'base: {info["base"]} local: {info["local"]} remote: {info["remote"]}')


if __name__ == '__main__':
    previous_head, new_head, is_branch_checkout = sys.argv[1:]
    try:
        proc(previous_head, new_head, is_branch_checkout == '1')
    except Exception as e:
        msgdump('error', f'{e}')
        sys.exit(1)
