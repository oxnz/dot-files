#!/bin/sh

# [user]

case "$(uname -s)" in
	Darwin)
		git config --global user.name "$(id -F)"
		;;
	*)
		git config --global user.name "$USER"
		;;
esac
git config --global user.email "$(id -u -n)@$(hostname)"

# [editor]

git config --global core.editor vim

# [commit]

cat <<EOF>$HOME/.stCommitMsg
Subject line (try to keep under 50 characters)

Multi-line description of commit,
feel free to be detailed.

# [Ticket: X]
EOF
git config --global commit.template ~/.stCommitMsg

# [alias]

git config --global alias.who 'shortlog -s --'

git config --global alias.undo 'reset --HEAD'
git config --global alias.unadd 'reset HEAD --'
git config --global alias.unstage 'reset HEAD --'

git config --global alias.st status
git config --global alias.ci commit
git config --global alias.br branch
git config --global alias.co checkout
git config --global alias.ls 'diff --name-status -r'
git config --global alias.df 'diff --stat -r'
git config --global alias.dc 'diff --cached'
git config --global alias.dv diff

git config --global alias.llog 'log --date=local'
git config --global alias.lo 'log --oneline'
git config --global alias.lc 'log ORIG_HEAD.. --stat --no-merges'
git config --global alias.lv 'log --graph --pretty=format:"%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset" --abbrev-commit --date=relative'

# [push]
git config --global push.default matching

# [pack]
git config --global pack.threads 1
git config --global pack.deltaCacheSize 128m
git config --global pack.packSizeLimit 128m
git config --global pack.windowMemory 128m

# [core]
git config --global core.excludesfile "${HOME}/.gitignore"
git config --global core.pager less

# [filter "lfs"]

git config --global filter.lfs.required true
git config --global filter.lfs.clean "git-lfs clean -- %f"
git config --global filter.lfs.smudge "git-lfs smudge -- %f"
git config --global filter.lfs.process "git-lfs filter-process"

# [filter "media"]
git config --global filter.media.required true
git config --global filter.media.clean 'git media clean %f'
git config --global filter.media.smudge 'git media smudge %f'

# [filter "hawser"]
git config --global filter.hawser.required true
git config --global filter.hawser.clean 'git hawser clean %f'
git config --global filter.hawser.smudge 'git hawser smudge %f'

# [diff]
git config --global diff.tool vimdiff
git config --global difftool.prompt false
git config --global diff.guitool code
git config --global difftool.code.cmd 'code --wait --diff $LOCAL REMOTE'
git config --global difftool.code.path '/Applications/Visual Studio Code.app/Contents/Resources/app/bin/code'

# [merge]

git config --global merge.tool vimdiff
git config --global merge.conflictstyle diff3
git config --global mergetool.prompt false
